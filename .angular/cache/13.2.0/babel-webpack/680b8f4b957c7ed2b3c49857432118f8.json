{"ast":null,"code":"import { Subject, map } from 'rxjs';\nimport { MenuItem } from '../shared/models/menu-item';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MenuItemService = /*#__PURE__*/(() => {\n  class MenuItemService {\n    constructor(http) {\n      this.http = http;\n      this.menuItemsChangedSource = new Subject();\n      this.menuItemsChanged$ = this.menuItemsChangedSource.asObservable();\n    }\n\n    getMenuItems() {\n      this.fetchMenuItems().subscribe(menuItems => {\n        this.menuItemsChangedSource.next(menuItems);\n      });\n    }\n\n    addMenuItem(pTitle, pDescription, pCategory) {\n      const menuItem = new MenuItem(pTitle, pDescription, pCategory);\n      this.postMenuItem(menuItem);\n      this.getMenuItems();\n    }\n\n    postMenuItem(pMenuItem) {\n      console.log(\"posting \" + pMenuItem);\n      this.http.post(\"http://localhost:8000/api/menu-items\", pMenuItem).subscribe(response => {\n        console.log(\"response = \" + response);\n      });\n    }\n\n    fetchMenuItems() {\n      return this.http.get(\"http://localhost:8000/api/menu-items\").pipe(map(response => {\n        return response.map(response => {\n          return new MenuItem(response.title, response.description, response.category);\n        });\n      }));\n    }\n\n    handleError(error) {\n      console.error(error);\n    }\n\n  }\n\n  MenuItemService.ɵfac = function MenuItemService_Factory(t) {\n    return new (t || MenuItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MenuItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuItemService,\n    factory: MenuItemService.ɵfac,\n    providedIn: 'root'\n  });\n  return MenuItemService;\n})();","map":null,"metadata":{},"sourceType":"module"}